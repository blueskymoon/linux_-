
fgrep:不支持正则表达式

REGEXP:PEGular EXPression 
Pattern:用正则表达式过滤

正则表达式：
    Basic REGEXP:基本正则表达式
    Extended REGEXP:扩展正则表达式

基本正则表达式:
字符匹配：
.:任意单个字符
[]:指定单个字符
[^]:指定之外的单个字符

次数匹配:
*:任意次数匹配
\?:0次或1次
\{m,n\}:至少m次，至多n次。


.*:

锚定:
^:
$:
\<, \b:
\>, \b:  


\(\)
\1,\2,\3 ....

grep:使用基本正则表达式定义的模式来过滤文本的命令:
    -i 或略大小写
    -v 
    -o
    --color：改变文本的颜色
    -E:使用扩展的正则表达式
    -A: 匹配的行扩展显示后两行
    -B:匹配的行扩展显示前两行
    -C:匹配到前后两行都显示


扩展正则表达式:
字符匹配:

.
[]
[^]

次数匹配:

*:
?:
+:匹配前面的字符至少1次
{m,n}:不需要加花括号

锚定字符都一样:
^
$
\<
\>

分组:
():分组
\1,\2,\3,....

或者
a|b: or A或者B
c|cat: C或者cat
(c|c)at: 找到大写C和小写c

grep -E = egrep

grep -E '[[:space:]]+' [file]  至少一个空格开头的句子

找到[file1]中的1-255的数字
\<(1-9) | [1-9][0-9]1[0-9]



egrep '(\<([1-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9])\>\.){3}\<([1-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9])\>'
 
查找IP地址
egrep '\<[1-9]|[1-9][0-9]|1[1-9]{2}|2[01][0-9]|22[0-3]\>(\.\<[0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-4])\>){2}\.\<([1-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-4])\>'  (有问题)
