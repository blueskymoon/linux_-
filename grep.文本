文本查找的需要：
grep,egrp ,fgrep
grep: 根据模式搜索文本，并将符合模式的文本行显示出来
Pattern:文本字符和正则表达式的元字符组合而成



grep [options] PATTERN [FILE..]

-i:表示忽略大小写
-colour   显示颜色
-v:显示没有被模式匹配到的行
-o:只显示别模式匹配的字符串


*:任意长度的任意字符
?:任意单个字符
[]:
[^]

正则表达式:Regular EXPression,REGEXP
元字符:
.:匹配任意单个字符
[]:匹配指定范围内的任意单个字符
[^]:匹配指定范围外的任意单个字符
    字符集合:[:digit:],[:lower:],[:upper:],[:punct:][:space:],[:alpha:],[:alnum:]



匹配次数:(贪婪匹配)
*:匹配其前面的字符任意此
    a,b,ab,aab,acb,amnb
    a*b
    a.*b

.*:任意长度的任意字符
\?:匹配其前面的字符1次或者0次

\是转译字符



\{m,n\}:匹配其前面的字符至少m此，之多n次
    \{1,\}
    \{0,3\}


grep 'a\{1,3\}b' [file]     //在a和b之间至少出现一个a或者最多出现3个
grep 'a.\{1,3}b' [file1]    //在a和b之间之多出现三个任意字符，最少出现一个


本身是部分匹配

位置锚定：
^:锚定行首，此字符后面的任意内容必须出现在行首
grep '^r..t' [file]
$:锚定行尾，此字符前面的任意内容必须出现在行尾
grep 'r&' [file]
^&:空白行


单词锚定:

/<:锚定词首，其后面的任意字符必须作单词首部出现
/<:锚定词尾，其前面的任意字符必须作为单词的尾部出现

\<root\>


分组:
\(\)
    \(ab\)*  ab为一个整体，ab可以出现1次0次或n次
    后向引用(前面出现什么，后面调用什么)
    \1:第一个左括号以及与之对应的有括号所包括的所有内容
    grep '(l..e).*\1' [file]
    grep '\([0-0]\).*\1$' [file1]

    \2:
    \3:

grep '\(1..e\).*\1' test3.txt




