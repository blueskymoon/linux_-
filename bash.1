shell编程:

编程语言:




编程语言:机器语言、汇编语言、高级语言

静态语言:编译型语言
    需要编译器翻译成二进制直接运行
    事先转换成可执行格式
    强类型(变量)
    C、C++、JAVA、C#

    
    
动态语言:解释型语言 on the fly
    解释一条运行一条
    弱类型:
    边解释边运行
    PHP. SHELL 、python(面向对象编程)、perl





面向过程：shell ,c

面向对象：JAVA,Python(两者都是纯面向对象),perl,(既面向过程又面向对象)

变量:内存空间，命名

内存:编址的存储单元

进程：
1+100:
1+1000000



变量类型:事先确定数据的存储格式和长度
    字符    
    数值  
        整型:
        浮点型:11.23  1.123*10^1, 0.123*10^2
    布尔型:
    真、假

逻辑:1+1>2
逻辑运算: 与、或、非、异或
1:真
0:假


1 & 0 = 0
0 & 0 = 0
0 | 0 = 0
1 | 0 = 1


或:


非:
! 真 = 假
! 假 = 真


shell :弱类型编程语言

强:变量在使用前，必须事先声明，甚至还需要初始化
    NULL:变量应该为NULL
弱:变量用时声明:甚至不区分类型:

显式转换：




bash变量类型:
    环境变量：
    本地变量(局部变量)
    位置变量
    特殊变量


本地变量:
    bash:变量是进程的变量

变量赋值:VAR_NAME=VALUE:作用域为当前自带码


局部变量：作用域为当前shell 进程及其子进程
local VARNAME=VALUE: 作用域当前代码段引用变量:${VARNAME},括号可以省略
                                          name=pig

环境变量:作用域为当前shell进程及其子进程
export VARNAME+VALUE
VARNAME=VALUE
export VARNAME
    "导出" 
 
脚本在执行时会起动一个子shell进程：
    命令行中启动的脚本会继承当前shell环境变量
    系统自动执行的脚本(非命令行启动)就需要自我定义需要各环境变量


    bash:





 整型，8bit:256   
 0-255, 溢出    （缓冲区溢出攻击）

编译型语言强类型语言。



变量:是内部空间




字符型:
10:16bit
数值型:
10:1010 ，8bit








